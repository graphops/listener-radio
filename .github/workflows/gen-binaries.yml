name: Build and upload release binaries

on:
  release:
    types: [published]
  # push:
  #   branches: [dev]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:password@localhost:5432/3la-test

    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Go
        run: |
          if [ $(uname -m) = "aarch64" ]; then
            wget https://golang.org/dl/go1.19.5.linux-arm64.tar.gz &&
            sudo tar -C /usr/local -xzf go1.19.5.linux-arm64.tar.gz
          else
            wget https://golang.org/dl/go1.19.5.linux-amd64.tar.gz &&
            sudo tar -C /usr/local -xzf go1.19.5.linux-amd64.tar.gz
          fi
          export PATH=$PATH:/usr/local/go/bin
      
      - name: Setup Database
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/postgres
        run: cargo install sqlx-cli --no-default-features  --features native-tls,postgres
      
      - name: Database create
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/postgres
        run: sqlx database create
        
      - name: Database migrate
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/postgres
        run: sqlx migrate run

      - name: Build release binary
        run: |
          export DATABASE_URL=postgres://postgres:password@localhost:5432/postgres
          cargo build --release

      - name: Upload Ubuntu binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/release/graphcast-3la
          asset_name: graphcast-3la-${{ github.event.release.tag_name }}-ubuntu
          asset_content_type: binary/octet-stream
