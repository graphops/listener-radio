name: CI

on:
  push:
    branches: [main]
  pull_request_review:
    types: [submitted]

jobs:
  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          rustup component add rustfmt
          cargo fmt --all -- --check

  check:
    name: Check
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable-x86_64-unknown-linux-gnu
          default: true
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
      - name: Run Clippy
        run: |
          rustup component add clippy
          cargo clippy --all-features --all-targets -- -D warnings

  test:
    name: Test Suite
    if: github.event.review.state == 'approved'
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolchain: [stable-x86_64-unknown-linux-gnu]
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          default: true
          override: true
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --version=0.6.0
      - name: Run Database Migrations
        run: cargo sqlx database create && cargo sqlx migrate run
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      - uses: actions-rs/cargo@v1
        with:
          command: build
      - uses: actions-rs/cargo@v1
        with:
          command: test
